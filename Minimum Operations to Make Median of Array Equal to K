class Solution {
public:
    long long minOperationsToMakeMedianK(vector<int>& nums, int k) {
        
        int n = nums.size();
        
        sort(nums.begin(),nums.end());
        
        int mid = n/2;
        
        if(nums[mid]==k) return 0;
        
        long long ans = 0;
        
        if(nums[mid]>k)
        {
            int ind = upper_bound(nums.begin(),nums.end(),k)-nums.begin();
            
            for(int i=ind;i<=mid;i++)
            {
                ans+=nums[i]-k;
                
                // cout<<ans<<" ";
            }
        }
        else
        {
            int ind = upper_bound(nums.begin(),nums.end(),k)-nums.begin()-1;
            
            // cout<<ind<<" ";
            for(int i=mid;i<=ind;i++)
            {
                ans+=k-nums[i];
            }
        }
        
        
        return ans;
    }
};
